/*! axon-angularjs-quizzes - v0.0.5 - 2016-06-28 */

!function(){"use strict";angular.module("axon-angularjs-quizzes",["angular-progress-arc","axon-angularjs-utilities","ui.bootstrap","ui.router"])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").directive("quiz",[function(){return{scope:{source:"=",highlight:"&"},restrict:"AE",templateUrl:"/directives/quiz/quiz.html",link:function($scope,$elem,$attrs){}}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").directive("quizAnswer",["$sce",function($sce){return{scope:{question:"="},restrict:"AE",templateUrl:"/directives/quizAnswer/quizAnswer.html",link:function($scope,$elem,$attrs){$scope.sanitizedCommentary=$sce.trustAsHtml($scope.question.commentary)}}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").directive("quizQuestion",[function(){return{scope:{question:"=",highlight:"&"},restrict:"AE",templateUrl:"/directives/quizQuestion/quizQuestion.html",link:function($scope,$elem,$attrs){$scope.markAsIncomplete=function(){var showIncomplete="function"==typeof $scope.highlight&&$scope.highlight();return!$scope.question.isAnswered()&&showIncomplete},console.log($scope.highlight),console.log($scope.highlight())}}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").directive("quizResults",[function(){return{scope:{source:"="},restrict:"AE",templateUrl:"directives/quizResults/quizResults.html",link:function($scope,$elem,$attrs){}}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").directive("quizScorecard",["Scorecard",function(Scorecard){return{scope:{beforeSource:"=",afterSource:"=",modulesSource:"="},restrict:"AE",templateUrl:"/directives/quizScorecard/quizScorecard.html",link:function($scope,$elem,$attrs){$scope.getFn=function(src){return function(){return src}},$scope.isSingleSource=!$scope.afterSource;var scorecard=Scorecard($scope.modulesSource,$scope.beforeSource,$scope.afterSource);angular.extend($scope,scorecard)}}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").directive("quizScorecardQuestion",["$modal",function($modal){return{scope:{question:"="},restrict:"AE",templateUrl:"/directives/quizScorecardQuestion/quizScorecardQuestion.html",link:function($scope,$elem,$attrs){$scope.onButtonClicked=function(){$modal.open({templateUrl:"views/QuizAnswerModal/QuizAnswerModal.html",controller:"QuizAnswerModalController",resolve:{$modalArgs:function(){return{question:$scope.question}}}})}}}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Action",[function(){return function(action){var defaults={href:"",sref:"",label:"Next"};return angular.merge(defaults,action)}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Competency",[function(){return function(competency){var defaults={key:"",name:"",description:"",url:""};return angular.merge(defaults,competency)}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Module",[function(){return function(module){var defaults={name:"",number:0,key:"",competencies:[],pages:[]};return angular.extend(defaults,module)}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Page",[function(){return function(page){var defaults={number:0,type:"",name:"",state:"",transcriptUrl:"",actions:{next:null,prev:null}};return angular.merge(defaults,page)}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Question",[function(){return function(question){function clearAnswer(){merged.answer=null}function clearResultData(){merged.commentary=null,merged.correctAnswer=null,merged.isCorrect=null}function getFormattedAnswer(){return isAnswered()?getFormattedChoice(merged.answer):"No Answer"}function getFormattedChoice(index){return isChoiceLiteral()?merged.choices[parseInt(index)]:isChoice()?String.fromCharCode(65+parseInt(index)):index}function getFormattedCorrectAnswer(){return hasResultData()?getFormattedChoice(merged.correctAnswer):"No Answer"}function hasCompetency(){return null!==merged.competency}function hasResultData(){return null!==merged.correctAnswer}function isAnswered(){return null!==merged.answer}function isChoice(){return merged.type===TYPE_CHOICE}function isChoiceLiteral(){return merged.type===TYPE_CHOICE_LITERAL}function isText(){return merged.type===TYPE_TEXT}var merged={},TYPE_CHOICE="choice",TYPE_CHOICE_LITERAL="choiceLiteral",TYPE_TEXT="text",defaults={answer:null,choices:[],commentary:null,competency:null,correctAnswer:null,isCorrect:null,key:null,number:null,text:"",type:TYPE_CHOICE,value:0};return function(){angular.extend(merged,defaults,question,{clearAnswer:clearAnswer,clearResultData:clearResultData,getFormattedAnswer:getFormattedAnswer,getFormattedChoice:getFormattedChoice,getFormattedCorrectAnswer:getFormattedCorrectAnswer,hasCompetency:hasCompetency,hasResultData:hasResultData,isAnswered:isAnswered,isChoice:isChoice,isChoiceLiteral:isChoiceLiteral,isText:isText})}(),merged}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Quiz",["Question",function(Question){return function(quiz){function clear(){merged.questions.forEach(function(question){question.clear()})}function getAnswers(){return merged.questions.map(function(question){return question.answer})}function getCompetencies(){merged.questions.filter(function(question){return question.hasCompetency()}).map(function(question){return question.competency}).filter(function(competency){return!competency}).reduce(function(competency,quizCompetencies){return quizCompetencies.concat(competency)}).filter(function(competency,index,quizCompetencies){return quizCompetencies.indexOf(competency)===index}).sort(function(a,b){return a.key<b.key?-1:a.key>b.key?1:0})}function getMaxScore(){return merged.questions.reduce(function(question,sum){return sum+question.value},0)}function getScore(){return merged.questions.reduce(function(question,sum){return sum+question.correct?question.value:0},0)}function getUnansweredQuestions(){return merged.questions.filter(function(question){return!question.isAnswered()})}function setAnswers(answers){if(answers.length!==merged.questions.length)throw new Error("The provided answers array is not the same size as the questions array!");answers.forEach(function(answer,index){var question=merged.questions[index];question.answer=answer})}var merged={},defaults={instructions:"",name:"",questions:[]};return function(){angular.extend(merged,defaults,quiz,{clear:clear,getAnswers:getAnswers,getCompetencies:getCompetencies,getMaxScore:getMaxScore,getScore:getScore,getUnansweredQuestions:getUnansweredQuestions,setAnswers:setAnswers}),merged.questions=merged.questions.map(function(item){return Question(item)})}(),merged}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Reference",[function(){return function(reference){var defaults={key:"",name:"",description:"",url:""};return angular.merge(defaults,reference)}}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").factory("Scorecard",[function(){function Scorecard(modulesData,pretestData,posttestData){var modules=modulesData.map(function(module){return makeModule(module,pretestData,posttestData)}),pretest={score:0,maxScore:0,percentCorrect:0},posttest={score:0,maxScore:0,percentCorrect:0},percentageDifference=null;return modules.forEach(function(module){pretest.score+=module.pretest.score,pretest.maxScore+=module.pretest.maxScore,null!==module.posttest?(posttest.score+=module.posttest.score,posttest.maxScore+=module.posttest.maxScore):posttest=null}),pretest.percentCorrect=pretest.score/pretest.maxScore*100,null!==posttest&&(posttest.percentCorrect=posttest.score/posttest.maxScore*100,percentageDifference=posttest.percentCorrect-pretest.percentCorrect),{modules:modules,pretest:pretest,posttest:posttest,percentageDifference:percentageDifference}}function makeCompetency(competencyData,pretestData,posttestData){var description=competencyData.description,pretest={score:0,maxScore:0,percentCorrect:0,questions:[]},posttest={score:0,maxScore:0,percentCorrect:0,questions:[]},percentageDifference=null;return pretestData.questions.filter(function(question){return question.competency.key===competencyData.key}).forEach(function(question){pretest.questions.push(question),pretest.maxScore+=question.value,question.isCorrect&&(pretest.score+=question.value)}),pretest.percentCorrect=pretest.score/pretest.maxScore*100,"undefined"!=typeof posttestData?(posttestData.questions.filter(function(question){return question.competency.key===competencyData.key}).forEach(function(question){posttest.questions.push(question),posttest.maxScore+=question.value,question.isCorrect&&(posttest.score+=question.value)}),posttest.percentCorrect=posttest.score/posttest.maxScore*100,percentageDifference=posttest.percentCorrect-pretest.percentCorrect):posttest=null,{description:description,pretest:pretest,posttest:posttest,percentageDifference:percentageDifference}}function makeModule(moduleData,pretestData,posttestData){var number=moduleData.number,description=moduleData.description,title=moduleData.title,competencies=moduleData.competencies.map(function(competency){return makeCompetency(competency,pretestData,posttestData)}),pretest={score:0,maxScore:0,percentCorrect:0},posttest={score:0,maxScore:0,percentCorrect:0},percentageDifference=null;return competencies.forEach(function(competency){pretest.score+=competency.pretest.score,pretest.maxScore+=competency.pretest.maxScore,null!==competency.posttest?(posttest.score+=competency.posttest.score,posttest.maxScore+=competency.posttest.maxScore):posttest=null}),pretest.percentCorrect=pretest.score/pretest.maxScore*100,null!==posttest&&(posttest.percentCorrect=posttest.score/posttest.maxScore*100,percentageDifference=posttest.percentCorrect-pretest.percentCorrect),{number:number,description:description,title:title,competencies:competencies,pretest:pretest,posttest:posttest,percentageDifference:percentageDifference}}return Scorecard}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").controller("KTPlanEditModalController",["$scope","$state","$modalInstance","$modalArgs",function($scope,$state,$modalInstance,$modalArgs){$scope.onOkayButtonClicked=function(){return"function"!=typeof $modalArgs.onOkayButtonClicked?void $modalInstance.close():void $modalArgs.onOkayButtonClicked($modalInstance)},$scope.onCancelButtonClicked=function(){return"function"!=typeof $modalArgs.onCancelButtonClicked?void $modalInstance.close():void $modalArgs.onCancelButtonClicked($modalInstance)},function(){"undefined"==typeof $modalArgs&&($modalArgs={}),$scope.module=$modalArgs.module,$scope.competency=$modalArgs.competency,$scope.competencyNum=$modalArgs.competencyNum}()}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").controller("QuizAnswerModalController",["$scope","$modalInstance","$modalArgs",function($scope,$modalInstance,$modalArgs){$scope.onCloseButtonClicked=function(){$modalInstance.close()},function(){"undefined"==typeof $modalArgs&&($modalArgs={}),$scope.question=$modalArgs.question}()}])}(),function(){"use strict";angular.module("axon-angularjs-quizzes").controller("ReferenceModalController",["$scope","$modalInstance","$modalArgs","$window",function($scope,$modalInstance,$modalArgs,$window){$scope.onDownloadPdfButtonClicked=function(){$window.open($scope.reference.url)},$scope.onCloseButtonClicked=function(){$modalInstance.close()},function(){$scope.reference=$modalArgs.reference}()}])}();